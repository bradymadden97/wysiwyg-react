{"version":3,"sources":["event-handler/suggestions.js","event-handler/modals.js","event-handler/focus.js","event-handler/keyDown.js","utils/BlockStyle.js","utils/common.js","utils/toolbar.js","utils/handlePaste.js","components/Option/index.js","components/Dropdown/index.js","components/DropdownOption/index.js","controls/Inline/Component/index.js","controls/Inline/index.js","controls/BlockType/Component/index.js","controls/BlockType/index.js","controls/FontSize/Component/index.js","controls/FontSize/index.js","controls/TextAlign/Component/index.js","controls/TextAlign/index.js","controls/History/Component/index.js","controls/History/index.js","controls/Insertion/Component/index.js","controls/Insertion/index.js","controls/Submission/Component/index.js","controls/index.js","controls/Submission/index.js","renderer/Embedded/index.js","renderer/Image/index.js","renderer/index.js","config/defaultToolbar.js","Editor/index.js","index.js","icons/bold.svg","icons/italic.svg","icons/underline.svg","icons/monospace.svg","icons/font-size.svg","icons/align-left.svg","icons/align-center.svg","icons/align-right.svg","icons/undo.svg","icons/redo.svg"],"names":["suggestionDropdownOpen","ModalHandler","callBacks","suggestionCallback","undefined","editorFlag","suggestionFlag","closeAllModals","event","_this","forEach","callBack","init","wrapperId","wrapper","document","getElementById","addEventListener","key","onEditorClick","closeModals","registerCallBack","push","deregisterCallBack","filter","cb","setSuggestionCallback","removeSuggestionCallback","onSuggestionClick","FocusHandler","inputFocused","editorMouseDown","onEditorMouseDown","editorFocused","onInputMouseDown","isEditorBlur","target","tagName","isEditorFocused","isToolbarFocused","isInputFocused","keyDown","onKeyDown","suggestions","open","close","isOpen","blockStyleFn","block","blockAlignment","getData","get","concat","obj","callback","hasOwnProperty","call","hasProperty","property","result","stopPropagation","getFirstIcon","config","options","icon","mergeRecursive","obj1","obj2","mergedValue","value","Object","prototype","toString","handlePastedText","text","html","editorState","onChange","selectedBlock","getSelectedBlock","type","contentState","Modifier","replaceText","getCurrentContent","getSelection","getCurrentInlineStyle","EditorState","Option","onClick","_this$props","props","disabled","_classNames","_classNames2","_this$props2","this","children","className","activeClassName","active","title","react_default","a","createElement","classNames","defineProperty","aria-selected","Component","Dropdown","state","highlighted","toggleExpansion","setHighlighted","setState","doExpand","doCollapse","expanded","_this2","optionWrapperClassName","ariaLabel","onExpandEvent","slice","length","aria-expanded","aria-label","href","rdw-dropdown-carettoclose","rdw-dropdown-carettoopen","React","Children","map","option","index","cloneElement","onSelect","DropdownOption","resetHighlighted","_this$props3","disabledClassName","highlightedClassName","onMouseEnter","onMouseLeave","Inline","currentState","style","Option_Option","CODE","alt","src","dropdownClassName","Dropdown_Dropdown","DropdownOption_DropdownOption","inDropdown","renderInDropDown","renderInFlatList","currentStyles","signalExpanded","expandCollapse","toggleInlineStyle","newStyle","toUpperCase","newState","RichUtils","changeKeys","st","toLowerCase","modalHandler","getSelectionInlineStyle","properties","_this$state","InlineComponent","component","LayoutComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","getBlockTypes","label","displayName","blockTypes","blocks","blockType","_this$props2$config","currentBlockData","blk","currentLabel","_ref","includes","renderInDropdown","renderFlat","BlockType","currentBlockType","blocksTypes","toggleBlockType","blockTypeValue","find","bt","getSelectedBlocksType","BlockTypeComponent","defaultFontSize","editorElm","getElementsByClassName","window","getComputedStyle","getPropertyValue","substring","_this$props$config","currentFontSize","fontSize","Number","indexOf","size","FontSize","toggleFontSize","toggleCustomInlineStyle","getSelectionCustomInlineStyle","FONTSIZE","FontSizeComponent","TextAlign","left","center","right","justify","textAlignment","currentTextAlignment","addBlockAlignmentData","setBlockData","text-align","getSelectedBlocksMetadata","TextAlignmentComponent","History","_this$props$currentSt","undoDisabled","redoDisabled","undo","redo","_this$props2$currentS","action","getUndoStack","getRedoStack","HistoryComponent","Insertion","insertCharacter","character","InsertionComponent","Submission","Controls","inline","textAlign","history","insertion","submission","btn","onExport","onReset","rawContentState","convertToRaw","markup","draftToHtml","SubmissionComponent","Embed","_entity$getData","getEntity","getEntityAt","height","width","frameBorder","allowFullScreen","getImageComponent","_Component","Image","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","hovered","setEntityAlignmentLeft","setEntityAlignment","setEntityAlignmentRight","setEntityAlignmentCenter","alignment","entityKey","mergeEntityData","getEditorState","dummy","toggleHovered","inherits","createClass","rdw-image-alignment-options-popup-right","isReadOnly","isImageAlignmentEnabled","rdw-image-left","rdw-image-right","rdw-image-center","renderAlignmentOptions","getBlockRenderFunc","customBlockRenderer","renderedComponent","getType","entity","editable","Embedded","defaultToolbar","bold","italic","underline","monospace","emdash","endash","lapostrophe","rapostrophe","lquotation","rquotation","export","reset","WysiwygEditor","onEditorBlur","onEditorFocus","onFocus","editFocused","focusHandler","onTab","changeDepth","shiftKey","preventDefault","onUpDownArrow","SuggestionHandler","onToolbarFocus","onWrapperBlur","onBlur","readOnly","onEditorStateChange","isCollapsed","afterChange","setWrapperReference","ref","setEditorReference","editorRef","editor","getCompositeDecorator","decorators","toConsumableArray","customDecorators","CompositeDecorator","getWrapperRef","getSuggestions","mention","setTimeout","onContentStateChange","toolbar","image","alignmentEnabled","createEditorState","compositeDecorator","set","decorator","defaultEditorState","convertFromRaw","createWithContent","moveSelectionToEnd","defaultContentState","initialContentState","createEmpty","filterEditorProps","keys","filteredKeys","filteredObject","changeEditorState","newContentState","focusEditor","focus","handleKeyCommand","command","handleReturn","handleNewLine","stripPastedStyles","initialText","processedHTML","DraftPasteProcessor","processHTML","ContentState","createFromBlockArray","createFromText","newEditorState","moveFocusToEnd","Math","floor","random","blockRendererFn","customBlockRenderFunc","editorProps","customStyleMap","getCustomStyleMap","extractInlineStyle","_this$state2","toolbarCustomButtons","toolbarOnFocus","toolbarClassName","toolbarHidden","editorClassName","wrapperClassName","toolbarStyle","editorStyle","wrapperStyle","uploadCallback","controlProps","toolbarShow","Fragment","id","objectSpread","visibility","onMouseDown","aria-hidden","opt","Control","ControlBlock","assign","button","KeyDownHandler","Draft","onUpArrow","onDownArrow","blockRenderMap","defaultProps","elem","ReactDOM","render","Editor_WysiwygEditor","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.84b61155.chunk.js","sourcesContent":["let suggestionDropdownOpen;\r\n\r\nexport default {\r\n  open: () => {\r\n    suggestionDropdownOpen = true;\r\n  },\r\n\r\n  close: () => {\r\n    suggestionDropdownOpen = false;\r\n  },\r\n\r\n  isOpen: () => suggestionDropdownOpen,\r\n};\r\n","export default class ModalHandler {\r\n  callBacks = [];\r\n  suggestionCallback = undefined;\r\n  editorFlag = false;\r\n  suggestionFlag = false;\r\n\r\n  closeAllModals = (event: Object) => {\r\n    this.callBacks.forEach((callBack) => {\r\n      callBack(event);\r\n    });\r\n  };\r\n\r\n  init = (wrapperId: string) => {\r\n    const wrapper = document.getElementById(wrapperId); // eslint-disable-line no-undef\r\n    if (wrapper) {\r\n      wrapper.addEventListener('click', () => {\r\n        this.editorFlag = true;\r\n      });\r\n    }\r\n    if (document) {\r\n      document.addEventListener('click', () => { // eslint-disable-line no-undef\r\n        if (!this.editorFlag) {\r\n          this.closeAllModals();\r\n          if (this.suggestionCallback) {\r\n            this.suggestionCallback();\r\n          }\r\n        } else {\r\n          this.editorFlag = false;\r\n        }\r\n      });\r\n      document.addEventListener('keydown', (event) => { // eslint-disable-line no-undef\r\n        if (event.key === 'Escape') {\r\n          this.closeAllModals();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onEditorClick = () => {\r\n    this.closeModals();\r\n    if (!this.suggestionFlag && this.suggestionCallback) {\r\n      this.suggestionCallback();\r\n    } else {\r\n      this.suggestionFlag = false;\r\n    }\r\n  }\r\n\r\n  closeModals = (event: Object): void => {\r\n    this.closeAllModals(event);\r\n  };\r\n\r\n  registerCallBack = (callBack): void => {\r\n    this.callBacks.push(callBack);\r\n  };\r\n\r\n  deregisterCallBack = (callBack): void => {\r\n    this.callBacks = this.callBacks.filter(cb => cb !== callBack);\r\n  };\r\n\r\n  setSuggestionCallback = (callBack): void => {\r\n    this.suggestionCallback = callBack;\r\n  };\r\n\r\n  removeSuggestionCallback = (): void => {\r\n    this.suggestionCallback = undefined;\r\n  };\r\n\r\n  onSuggestionClick = ():void => {\r\n    this.suggestionFlag = true;\r\n  }\r\n}\r\n","export default class FocusHandler {\r\n  inputFocused = false;\r\n  editorMouseDown = false;\r\n\r\n  onEditorMouseDown = ():void => {\r\n    this.editorFocused = true;\r\n  }\r\n\r\n  onInputMouseDown = ():void => {\r\n    this.inputFocused = true;\r\n  }\r\n\r\n  isEditorBlur = (event):void => {\r\n    if ((event.target.tagName === 'INPUT' || event.target.tagName === 'LABEL')\r\n      && !this.editorFocused) {\r\n      this.inputFocused = false;\r\n      return true;\r\n    } else if ((event.target.tagName !== 'INPUT' || event.target.tagName !== 'LABEL')\r\n      && !this.inputFocused) {\r\n      this.editorFocused = false;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isEditorFocused = ():void => {\r\n    if (!this.inputFocused) {\r\n      return true;\r\n    }\r\n    this.inputFocused = false;\r\n    return false;\r\n  }\r\n\r\n  isToolbarFocused = ():void => {\r\n    if (!this.editorFocused) {\r\n      return true;\r\n    }\r\n    this.editorFocused = false;\r\n    return false;\r\n  }\r\n\r\n  isInputFocused = ():void => this.inputFocused;\r\n}\r\n","let callBacks = [];\r\n\r\nexport default {\r\n  onKeyDown: (event: Object) => {\r\n    callBacks.forEach((callBack) => {\r\n      callBack(event);\r\n    });\r\n  },\r\n\r\n  registerCallBack: (callBack): void => {\r\n    callBacks.push(callBack);\r\n  },\r\n\r\n  deregisterCallBack: (callBack): void => {\r\n    callBacks = callBacks.filter(cb => cb !== callBack);\r\n  },\r\n};\r\n","// The function will return block inline styles using block level meta-data\r\nexport default function blockStyleFn(block: Object): string {\r\n  const blockAlignment = block.getData() && block.getData().get('text-align');\r\n  if (blockAlignment) {\r\n    return `rdw-${blockAlignment}-aligned-block`;\r\n  }\r\n  return '';\r\n}\r\n","/* @flow */\r\n\r\n/**\r\n* Utility function to execute callback for eack key->value pair.\r\n*/\r\nexport function forEach(obj: Object, callback: Function) {\r\n  if (obj) {\r\n    for (const key in obj) { // eslint-disable-line no-restricted-syntax\r\n      if ({}.hasOwnProperty.call(obj, key)) {\r\n        callback(key, obj[key]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function hasProperty(obj: Object, property: string) {\r\n  let result = false;\r\n  if (obj) {\r\n    for (const key in obj) { // eslint-disable-line no-restricted-syntax\r\n      if ({}.hasOwnProperty.call(obj, key) && property === key) {\r\n        result = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n* The function returns true if the string passed to it has no content.\r\n*/\r\nexport function isEmptyString(str: string): boolean {\r\n  return !str || !str.trim()\r\n}\r\n\r\n/**\r\n* The function will return true for simple javascript object,\r\n* which is not any other built in type like Array.\r\n*/\r\nexport function isMap(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Object]';\r\n}\r\n\r\n/**\r\n* The function will return filter out props fron and return new props.\r\n*/\r\nexport function filter(obj, keys) {\r\n  const filteredKeys = Object.keys(obj).filter(key => keys.indexOf(key) < 0);\r\n  const filteredObject = {};\r\n  if (filteredKeys && filteredKeys.length > 0) {\r\n    filteredKeys.forEach((key) => {\r\n      filteredObject[key] = obj[key];\r\n    });\r\n  }\r\n  return filteredObject;\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n","/* @flow */\r\n\r\nimport { forEach, isMap } from './common';\r\n\r\n/**\r\n* This function is used when displaying options in drop-down.\r\n* Icon for first available options is used in drop-down placeholder.\r\n*/\r\nexport const getFirstIcon = config => config[config.options[0]].icon;\r\n\r\n/**\r\n* The function is used to recursively merge toolbar options.\r\n* It assumes all the options are peresent in obj1.\r\n* It recursively merges objects but not arrays.\r\n*/\r\nexport const mergeRecursive = (obj1, obj2) => {\r\n  if (obj1 && obj2 === undefined) {\r\n    return obj1;\r\n  }\r\n  const mergedValue = {};\r\n  forEach(obj1, (key, value) => {\r\n    if (isMap(value)) {\r\n      mergedValue[key] = mergeRecursive(value, obj2[key]);\r\n    } else {\r\n      mergedValue[key] = obj2[key] !== undefined ? obj2[key] : value;\r\n    }\r\n  });\r\n  return mergedValue;\r\n};\r\n\r\n// todo: writing test cases for these methods and new methods added in common.js\r\n","import { getSelectedBlock } from \"draftjs-utils\";\r\nimport { Modifier, EditorState } from \"draft-js\";\r\n\r\nexport const handlePastedText = (text, html, editorState, onChange) => {\r\n  const selectedBlock = getSelectedBlock(editorState);\r\n  if (selectedBlock && selectedBlock.type === \"code\") {\r\n    const contentState = Modifier.replaceText(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n      text,\r\n      editorState.getCurrentInlineStyle()\r\n    );\r\n    onChange(EditorState.push(editorState, contentState, \"insert-characters\"));\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './styles.css';\r\n\r\nexport default class Option extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    children: PropTypes.any,\r\n    value: PropTypes.string,\r\n    className: PropTypes.string,\r\n    activeClassName: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    title: PropTypes.string,\r\n  };\r\n\r\n  onClick: Function = () => {\r\n    const { disabled, onClick, value } = this.props;\r\n    if (!disabled) {\r\n      onClick(value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children, className, activeClassName, active, disabled, title, type } = this.props;\r\n\tif (type === \"submit\") {\r\n\t\treturn (\r\n\t\t\t  <button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t  'rdw-option-wrapper',\r\n\t\t\t\t  className,\r\n\t\t\t\t  {\r\n\t\t\t\t\t[`rdw-option-active ${activeClassName}`]: active,\r\n\t\t\t\t\t'rdw-option-disabled': disabled,\r\n\t\t\t\t  },\r\n\t\t\t\t)}\r\n\t\t\t\tonClick={this.onClick}\r\n\t\t\t\ttitle={title}\r\n\t\t\t  >\r\n\t\t\t\t{children}\r\n\t\t\t  </button>\r\n\t\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t  <div\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t  'rdw-option-wrapper',\r\n\t\t\t\t  className,\r\n\t\t\t\t  {\r\n\t\t\t\t\t[`rdw-option-active ${activeClassName}`]: active,\r\n\t\t\t\t\t'rdw-option-disabled': disabled,\r\n\t\t\t\t  },\r\n\t\t\t\t)}\r\n\t\t\t\tonClick={this.onClick}\r\n\t\t\t\taria-selected={active}\r\n\t\t\t\ttitle={title}\r\n\t\t\t  >\r\n\t\t\t\t{children}\r\n\t\t\t  </div>\r\n\t\t\t);\r\n\t}\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './styles.css';\r\n\r\nimport { stopPropagation } from '../../utils/common';\r\n\r\nexport default class Dropdown extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.any,\r\n    onChange: PropTypes.func,\r\n    className: PropTypes.string,\r\n    expanded: PropTypes.bool,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onExpandEvent: PropTypes.func,\r\n    optionWrapperClassName: PropTypes.string,\r\n    ariaLabel: PropTypes.string,\r\n    title: PropTypes.string,\r\n  };\r\n\r\n  state: Object = {\r\n    highlighted: -1,\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (this.props.expanded && !props.expanded) {\r\n      this.setState({\r\n        highlighted: -1,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange: Function = (value: any): void => {\r\n    const { onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n    this.toggleExpansion();\r\n  };\r\n\r\n  setHighlighted: Function = (highlighted: number): void => {\r\n    this.setState({\r\n      highlighted,\r\n    });\r\n  };\r\n\r\n  toggleExpansion: Function = (): void => {\r\n    const { doExpand, doCollapse, expanded } = this.props;\r\n    if (expanded) {\r\n      doCollapse();\r\n    } else {\r\n      doExpand();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      expanded,\r\n      children,\r\n      className,\r\n      optionWrapperClassName,\r\n      ariaLabel,\r\n      onExpandEvent,\r\n      title,\r\n    } = this.props;\r\n    const { highlighted } = this.state;\r\n    const options = children.slice(1, children.length);\r\n    return (\r\n      <div\r\n        className={classNames('rdw-dropdown-wrapper', className)}\r\n        aria-expanded={expanded}\r\n        aria-label={ariaLabel || 'rdw-dropdown'}\r\n      >\r\n        <button\r\n          className=\"rdw-dropdown-selectedtext\"\r\n          onClick={onExpandEvent}\r\n          title={title}\r\n\t\t  href=\"#\"\r\n\t\t  type=\"button\"\r\n        >\r\n          {children[0]}\r\n          <div\r\n            className={classNames({\r\n              'rdw-dropdown-carettoclose': expanded,\r\n              'rdw-dropdown-carettoopen': !expanded,\r\n            })}\r\n          />\r\n        </button>\r\n        {expanded ?\r\n          <ul\r\n            className={classNames('rdw-dropdown-optionwrapper', optionWrapperClassName)}\r\n            onClick={stopPropagation}\r\n          >\r\n            {\r\n              React.Children.map(options, (option, index) => {\r\n                const temp = option && React.cloneElement(\r\n                  option, {\r\n                    onSelect: this.onChange,\r\n                    highlighted: highlighted === index,\r\n                    setHighlighted: this.setHighlighted,\r\n                    index,\r\n                  });\r\n                return temp;\r\n              })\r\n            }\r\n          </ul> : undefined}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './styles.css';\r\n\r\nexport default class DropdownOption extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.any,\r\n    value: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n    onSelect: PropTypes.func,\r\n    setHighlighted: PropTypes.func,\r\n    index: PropTypes.number,\r\n    disabled: PropTypes.bool,\r\n    active: PropTypes.bool,\r\n    highlighted: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    activeClassName: PropTypes.string,\r\n    disabledClassName: PropTypes.string,\r\n    highlightedClassName: PropTypes.string,\r\n    title: PropTypes.string,\r\n  };\r\n\r\n  onClick: Function = (event): void => {\r\n    const { onSelect, onClick, value, disabled } = this.props;\r\n    if (!disabled) {\r\n      if (onSelect) {\r\n        onSelect(value);\r\n      }\r\n      if (onClick) {\r\n        event.stopPropagation();\r\n        onClick(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  setHighlighted: Function = (): void => {\r\n    const { setHighlighted, index } = this.props;\r\n    setHighlighted(index);\r\n  };\r\n\r\n  resetHighlighted: Function = (): void => {\r\n    const { setHighlighted } = this.props;\r\n    setHighlighted(-1);\r\n  };\r\n\r\n  render(): Object {\r\n    const {\r\n      children,\r\n      active,\r\n      disabled,\r\n      highlighted,\r\n      className,\r\n      activeClassName,\r\n      disabledClassName,\r\n      highlightedClassName,\r\n      title,\r\n    } = this.props;\r\n    return (\r\n      <li\r\n        className={classNames(\r\n          'rdw-dropdownoption-default',\r\n          className,\r\n          { [`rdw-dropdownoption-active ${activeClassName}`]: active,\r\n            [`rdw-dropdownoption-highlighted ${highlightedClassName}`]: highlighted,\r\n            [`rdw-dropdownoption-disabled ${disabledClassName}`]: disabled,\r\n          })\r\n        }\r\n        onMouseEnter={this.setHighlighted}\r\n        onMouseLeave={this.resetHighlighted}\r\n        onClick={this.onClick}\r\n        title={title}\r\n      >\r\n        {children}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n// todo: review classname use above.\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { getFirstIcon } from '../../../utils/toolbar';\r\nimport Option from '../../../components/Option';\r\nimport Dropdown from '../../../components/Dropdown';\r\nimport DropdownOption from '../../../components/DropdownOption';\r\n\r\nimport './styles.css';\r\n\r\nexport default class Inline extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onExpandEvent: PropTypes.func,\r\n    config: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    currentState: PropTypes.object,\r\n  };\r\n\r\n  renderInFlatList(): Object {\r\n    const { config, currentState, onChange } = this.props;\r\n    return (\r\n      <div className={classNames('rdw-inline-wrapper', config.className)} aria-label=\"rdw-inline-control\">\r\n        {\r\n          config.options\r\n            .map((style, index) =>\r\n              (<Option\r\n                key={index}\r\n                value={style}\r\n                onClick={onChange}\r\n                className={classNames(config[style].className)}\r\n                active={\r\n                  currentState[style] === true ||\r\n                  (style === 'MONOSPACE' && currentState.CODE)\r\n                }\r\n                title={config[style].title}\r\n              >\r\n                <img\r\n                  alt=\"\"\r\n                  src={config[style].icon}\r\n                />\r\n              </Option>),\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInDropDown(): Object {\r\n    const {\r\n      config,\r\n      expanded,\r\n      doExpand,\r\n      onExpandEvent,\r\n      doCollapse,\r\n      currentState,\r\n      onChange,\r\n    } = this.props;\r\n    const { className, dropdownClassName, title } = config;\r\n    return (\r\n      <Dropdown\r\n        className={classNames('rdw-inline-dropdown', className)}\r\n        optionWrapperClassName={classNames(dropdownClassName)}\r\n        onChange={onChange}\r\n        expanded={expanded}\r\n        doExpand={doExpand}\r\n        doCollapse={doCollapse}\r\n        onExpandEvent={onExpandEvent}\r\n        aria-label=\"rdw-inline-control\"\r\n        title={title}\r\n      >\r\n        <img\r\n          src={getFirstIcon(config)}\r\n          alt=\"\"\r\n        />\r\n        {\r\n          config.options\r\n            .map((style, index) =>\r\n              (<DropdownOption\r\n                key={index}\r\n                value={style}\r\n                className={classNames('rdw-inline-dropdownoption', config[style].className)}\r\n                active={\r\n                  currentState[style] === true ||\r\n                  (style === 'MONOSPACE' && currentState.CODE)\r\n                }\r\n                title={config[style].title}\r\n              >\r\n                <img\r\n                  src={config[style].icon}\r\n                  alt=\"\"\r\n                />\r\n              </DropdownOption>))\r\n        }\r\n      </Dropdown>\r\n    );\r\n  }\r\n\r\n  render(): Object {\r\n    const { config: { inDropdown } } = this.props;\r\n    if (inDropdown) {\r\n      return this.renderInDropDown();\r\n    }\r\n    return this.renderInFlatList();\r\n  }\r\n}\r\n\r\n// todo: make subscript less low\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSelectionInlineStyle } from 'draftjs-utils';\r\nimport { RichUtils } from 'draft-js';\r\nimport { forEach } from '../../utils/common';\r\n\r\nimport LayoutComponent from './Component';\r\n\r\nexport default class Inline extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    editorState: PropTypes.object.isRequired,\r\n    modalHandler: PropTypes.object,\r\n    config: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {\r\n    currentStyles: {},\r\n  };\r\n\r\n  componentWillMount(): void {\r\n    const { editorState, modalHandler } = this.props;\r\n    if (editorState) {\r\n      this.setState({\r\n        currentStyles: this.changeKeys(getSelectionInlineStyle(editorState)),\r\n      });\r\n    }\r\n    modalHandler.registerCallBack(this.expandCollapse);\r\n  }\r\n\r\n  componentWillReceiveProps(properties: Object): void {\r\n    if (properties.editorState &&\r\n      this.props.editorState !== properties.editorState) {\r\n      this.setState({\r\n        currentStyles: this.changeKeys(getSelectionInlineStyle(properties.editorState)),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.deregisterCallBack(this.expandCollapse);\r\n  }\r\n\r\n  onExpandEvent: Function = (): void => {\r\n    this.signalExpanded = !this.state.expanded;\r\n  };\r\n\r\n  expandCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: this.signalExpanded,\r\n    });\r\n    this.signalExpanded = false;\r\n  }\r\n\r\n  toggleInlineStyle: Function = (style: string): void => {\r\n    const newStyle = style === 'monospace' ? 'CODE' : style.toUpperCase();\r\n    const { editorState, onChange } = this.props;\r\n    let newState = RichUtils.toggleInlineStyle(\r\n      editorState,\r\n      newStyle,\r\n    );\r\n    if (newState) {\r\n      onChange(newState);\r\n    }\r\n  };\r\n\r\n  changeKeys = (style) => {\r\n    if (style) {\r\n      const st = {};\r\n      forEach(style, (key, value) => {\r\n        st[key === 'CODE' ? 'monospace' : key.toLowerCase()] = value;\r\n      });\r\n      return st;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  doExpand: Function = (): void => {\r\n    this.setState({\r\n      expanded: true,\r\n    });\r\n  };\r\n\r\n  doCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: false,\r\n    });\r\n  };\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    const { expanded, currentStyles } = this.state;\r\n    const InlineComponent = config.component || LayoutComponent;\r\n    return (\r\n      <InlineComponent\r\n        config={config}\r\n        currentState={currentStyles}\r\n        expanded={expanded}\r\n        onExpandEvent={this.onExpandEvent}\r\n        doExpand={this.doExpand}\r\n        doCollapse={this.doCollapse}\r\n        onChange={this.toggleInlineStyle}\r\n      />\r\n    );\r\n  }\r\n}\r\n// make subscript less low\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Option from '../../../components/Option';\r\nimport Dropdown from '../../../components/Dropdown';\r\nimport DropdownOption from '../../../components/DropdownOption';\r\nimport './styles.css';\r\n\r\nclass LayoutComponent extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    onExpandEvent: PropTypes.func,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    config: PropTypes.object,\r\n    currentState: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      blockTypes: this.getBlockTypes(),\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(properties: Object): void {\r\n      this.setState({\r\n        blockTypes: this.getBlockTypes(),\r\n      });\r\n  }\r\n\r\n  getBlockTypes = () => [\r\n    { label: 'Normal', displayName: 'Normal' },\r\n    { label: 'H1', displayName: 'H1' },\r\n    { label: 'H2', displayName: 'H2' },\r\n    { label: 'H3', displayName: 'H3' },\r\n    { label: 'H4', displayName: 'H4' },\r\n    { label: 'H5', displayName: 'H5' },\r\n    { label: 'H6', displayName: 'H6' },\r\n    { label: 'Blockquote', displayName: 'Blockquote' },\r\n    { label: 'Code', displayName: 'Code' },\r\n  ];\r\n\r\n  renderFlat(blocks: Array<Object>): void {\r\n    const { config: { className }, onChange, currentState: { blockType } } = this.props;\r\n    return (\r\n      <div className={classNames('rdw-inline-wrapper', className)}>\r\n        {\r\n          blocks.map((block, index) =>\r\n            (<Option\r\n              key={index}\r\n              value={block.label}\r\n              active={blockType === block.label}\r\n              onClick={onChange}\r\n            >\r\n              {block.displayName}\r\n            </Option>),\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInDropdown(blocks: Array<Object>): void {\r\n    const {\r\n      config: { className, dropdownClassName, title },\r\n      currentState: { blockType },\r\n      expanded,\r\n      doExpand,\r\n      onExpandEvent,\r\n      doCollapse,\r\n      onChange,\r\n    } = this.props;\r\n    const { blockTypes } = this.state;\r\n    const currentBlockData = blockTypes.filter(blk => blk.label === blockType);\r\n    const currentLabel = currentBlockData && currentBlockData[0] && currentBlockData[0].displayName;\r\n    return (\r\n      <div className=\"rdw-block-wrapper\" aria-label=\"rdw-block-control\">\r\n        <Dropdown\r\n          className={classNames('rdw-block-dropdown', className)}\r\n          optionWrapperClassName={classNames(dropdownClassName)}\r\n          onChange={onChange}\r\n          expanded={expanded}\r\n          doExpand={doExpand}\r\n          doCollapse={doCollapse}\r\n          onExpandEvent={onExpandEvent}\r\n          title={title}\r\n        >\r\n          <span>{currentLabel}</span>\r\n          {\r\n            blocks.map((block, index) =>\r\n              (<DropdownOption\r\n                active={blockType === block.label}\r\n                value={block.label}\r\n                key={index}\r\n              >\r\n                {block.displayName}\r\n              </DropdownOption>))\r\n          }\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(): void {\r\n    const { config } = this.props;\r\n    const { inDropdown } = config;\r\n    const { blockTypes } = this.state;\r\n    const blocks = blockTypes.filter(({ label }) => config.options.includes(label));\r\n    return inDropdown ? this.renderInDropdown(blocks) : this.renderFlat(blocks);\r\n  }\r\n}\r\n\r\nexport default LayoutComponent;\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSelectedBlocksType } from 'draftjs-utils';\r\nimport { RichUtils } from 'draft-js';\r\n\r\nimport LayoutComponent from './Component';\r\n\r\nclass BlockType extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    editorState: PropTypes.object,\r\n    modalHandler: PropTypes.object,\r\n    config: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {\r\n    expanded: false,\r\n    currentBlockType: 'unstyled',\r\n  };\r\n\r\n  componentWillMount(): void {\r\n    const { editorState, modalHandler } = this.props;\r\n    if (editorState) {\r\n      this.setState({\r\n        currentBlockType: getSelectedBlocksType(editorState),\r\n      });\r\n    }\r\n    modalHandler.registerCallBack(this.expandCollapse);\r\n  }\r\n\r\n  componentWillReceiveProps(properties: Object): void {\r\n    if (properties.editorState &&\r\n      this.props.editorState !== properties.editorState) {\r\n      this.setState({\r\n        currentBlockType: getSelectedBlocksType(properties.editorState),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.deregisterCallBack(this.expandCollapse);\r\n  }\r\n\r\n  onExpandEvent: Function = (): void => {\r\n    this.signalExpanded = !this.state.expanded;\r\n  };\r\n\r\n  expandCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: this.signalExpanded,\r\n    });\r\n    this.signalExpanded = false;\r\n  }\r\n\r\n  blocksTypes: Array<Object> = [\r\n    { label: 'Normal', style: 'unstyled' },\r\n    { label: 'H1', style: 'header-one' },\r\n    { label: 'H2', style: 'header-two' },\r\n    { label: 'H3', style: 'header-three' },\r\n    { label: 'H4', style: 'header-four' },\r\n    { label: 'H5', style: 'header-five' },\r\n    { label: 'H6', style: 'header-six' },\r\n    { label: 'Blockquote', style: 'blockquote' },\r\n    { label: 'Code', style: 'code' },\r\n  ];\r\n\r\n  doExpand: Function = (): void => {\r\n    this.setState({\r\n      expanded: true,\r\n    });\r\n  };\r\n\r\n  doCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: false,\r\n    });\r\n  };\r\n\r\n  toggleBlockType: Function = (blockType: string) => {\r\n    const blockTypeValue = this.blocksTypes.find(bt => bt.label === blockType).style;\r\n    const { editorState, onChange } = this.props;\r\n    const newState = RichUtils.toggleBlockType(\r\n      editorState,\r\n      blockTypeValue,\r\n    );\r\n    if (newState) {\r\n      onChange(newState);\r\n    }\r\n  };\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    const { expanded, currentBlockType } = this.state;\r\n    const BlockTypeComponent = config.component || LayoutComponent;\r\n    const blockType = this.blocksTypes.find(bt => bt.style === currentBlockType);\r\n    return (\r\n      <BlockTypeComponent\r\n        config={config}\r\n        currentState={{ blockType: blockType && blockType.label }}\r\n        onChange={this.toggleBlockType}\r\n        expanded={expanded}\r\n        onExpandEvent={this.onExpandEvent}\r\n        doExpand={this.doExpand}\r\n        doCollapse={this.doCollapse}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlockType;\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Dropdown from '../../../components/Dropdown';\r\nimport DropdownOption from '../../../components/DropdownOption';\r\nimport './styles.css';\r\n\r\nexport default class LayoutComponent extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    onExpandEvent: PropTypes.func,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    config: PropTypes.object,\r\n    currentState: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {\r\n    defaultFontSize: undefined,\r\n  };\r\n\r\n  componentDidMount(): void {\r\n    const editorElm = document.getElementsByClassName('DraftEditor-root');\r\n    if (editorElm && editorElm.length > 0) {\r\n      const editorStyles = window.getComputedStyle(editorElm[0]);\r\n      let defaultFontSize = editorStyles.getPropertyValue('font-size');\r\n      defaultFontSize = defaultFontSize.substring(0, defaultFontSize.length - 2);\r\n      this.setState({ // eslint-disable-line react/no-did-mount-set-state\r\n        defaultFontSize,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      config: { icon, className, dropdownClassName, options, title },\r\n      onChange,\r\n      expanded,\r\n      doCollapse,\r\n      onExpandEvent,\r\n      doExpand,\r\n    } = this.props;\r\n    let { currentState: { fontSize: currentFontSize } } = this.props;\r\n    let { defaultFontSize } = this.state;\r\n    defaultFontSize = Number(defaultFontSize);\r\n    currentFontSize = currentFontSize ||\r\n      (options && options.indexOf(defaultFontSize) >= 0 && defaultFontSize);\r\n    return (\r\n      <div className=\"rdw-fontsize-wrapper\" aria-label=\"rdw-font-size-control\">\r\n        <Dropdown\r\n          className={classNames('rdw-fontsize-dropdown', className)}\r\n          optionWrapperClassName={classNames(dropdownClassName)}\r\n          onChange={onChange}\r\n          expanded={expanded}\r\n          doExpand={doExpand}\r\n          doCollapse={doCollapse}\r\n          onExpandEvent={onExpandEvent}\r\n          title={title}\r\n        >\r\n          {currentFontSize ?\r\n            <span>{currentFontSize}</span> :\r\n            <img src={icon} alt=\"\" />\r\n          }\r\n          {\r\n            options.map((size, index) =>\r\n              (<DropdownOption\r\n                className=\"rdw-fontsize-option\"\r\n                active={currentFontSize === size}\r\n                value={size}\r\n                key={index}\r\n              >\r\n                {size}\r\n              </DropdownOption>),\r\n            )\r\n          }\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  toggleCustomInlineStyle,\r\n  getSelectionCustomInlineStyle,\r\n} from 'draftjs-utils';\r\n\r\nimport LayoutComponent from './Component';\r\n\r\nexport default class FontSize extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    editorState: PropTypes.object,\r\n    modalHandler: PropTypes.object,\r\n    config: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {\r\n    expanded: undefined,\r\n    currentFontSize: undefined,\r\n  };\r\n\r\n  componentWillMount(): void {\r\n    const { editorState, modalHandler } = this.props;\r\n    if (editorState) {\r\n      this.setState({\r\n        currentFontSize:\r\n          getSelectionCustomInlineStyle(editorState, ['FONTSIZE']).FONTSIZE,\r\n      });\r\n    }\r\n    modalHandler.registerCallBack(this.expandCollapse);\r\n  }\r\n\r\n  componentWillReceiveProps(properties: Object): void {\r\n    if (properties.editorState &&\r\n      this.props.editorState !== properties.editorState) {\r\n      this.setState({\r\n        currentFontSize:\r\n          getSelectionCustomInlineStyle(properties.editorState, ['FONTSIZE']).FONTSIZE,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.deregisterCallBack(this.expandCollapse);\r\n  }\r\n\r\n  onExpandEvent: Function = (): void => {\r\n    this.signalExpanded = !this.state.expanded;\r\n  };\r\n\r\n  expandCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: this.signalExpanded,\r\n    });\r\n    this.signalExpanded = false;\r\n  }\r\n\r\n  doExpand: Function = (): void => {\r\n    this.setState({\r\n      expanded: true,\r\n    });\r\n  };\r\n\r\n  doCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: false,\r\n    });\r\n  };\r\n\r\n  toggleFontSize: Function = (fontSize: number) => {\r\n    const { editorState, onChange } = this.props;\r\n    const newState = toggleCustomInlineStyle(\r\n      editorState,\r\n      'fontSize',\r\n      fontSize,\r\n    );\r\n    if (newState) {\r\n      onChange(newState);\r\n    }\r\n  };\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    const { expanded, currentFontSize } = this.state;\r\n    const FontSizeComponent = config.component || LayoutComponent;\r\n    const fontSize = currentFontSize && Number(currentFontSize.substring(9));\r\n    return (\r\n      <FontSizeComponent\r\n        config={config}\r\n        currentState={{ fontSize }}\r\n        onChange={this.toggleFontSize}\r\n        expanded={expanded}\r\n        onExpandEvent={this.onExpandEvent}\r\n        doExpand={this.doExpand}\r\n        doCollapse={this.doCollapse}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Option from '../../../components/Option';\r\nimport Dropdown from '../../../components/Dropdown';\r\nimport DropdownOption from '../../../components/DropdownOption';\r\nimport { getFirstIcon } from '../../../utils/toolbar';\r\nimport './styles.css';\r\n\r\nexport default class TextAlign extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onExpandEvent: PropTypes.func,\r\n    config: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    currentState: PropTypes.object,\r\n  };\r\n\r\n  renderInFlatList(): Object {\r\n    const {\r\n      config: { options, left, center, right, justify, className },\r\n      onChange,\r\n      currentState: { textAlignment },\r\n    } = this.props;\r\n    return (\r\n      <div className={classNames('rdw-text-align-wrapper', className)} aria-label=\"rdw-textalign-control\">\r\n        {options.indexOf('left') >= 0 && <Option\r\n          value=\"left\"\r\n          className={classNames(left.className)}\r\n          active={textAlignment === 'left'}\r\n          onClick={onChange}\r\n          title={left.title}\r\n        >\r\n          <img\r\n            src={left.icon}\r\n            alt=\"\"\r\n          />\r\n        </Option>}\r\n        {options.indexOf('center') >= 0 && <Option\r\n          value=\"center\"\r\n          className={classNames(center.className)}\r\n          active={textAlignment === 'center'}\r\n          onClick={onChange}\r\n          title={center.title}\r\n        >\r\n          <img\r\n            src={center.icon}\r\n            alt=\"\"\r\n          />\r\n        </Option>}\r\n        {options.indexOf('right') >= 0 && <Option\r\n          value=\"right\"\r\n          className={classNames(right.className)}\r\n          active={textAlignment === 'right'}\r\n          onClick={onChange}\r\n          title={right.title}\r\n        >\r\n          <img\r\n            src={right.icon}\r\n            alt=\"\"\r\n          />\r\n        </Option>}\r\n        {options.indexOf('justify') >= 0 && <Option\r\n          value=\"justify\"\r\n          className={classNames(justify.className)}\r\n          active={textAlignment === 'justify'}\r\n          onClick={onChange}\r\n          title={justify.title}\r\n        >\r\n          <img\r\n            src={justify.icon}\r\n            alt=\"\"\r\n          />\r\n        </Option>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInDropDown(): Object {\r\n    const {\r\n      config,\r\n      expanded,\r\n      doExpand,\r\n      onExpandEvent,\r\n      doCollapse,\r\n      currentState: { textAlignment },\r\n      onChange,\r\n    } = this.props;\r\n    const { options, left, center, right, justify, className, dropdownClassName, title } = config;\r\n    return (\r\n      <Dropdown\r\n        className={classNames('rdw-text-align-dropdown', className)}\r\n        optionWrapperClassName={classNames(dropdownClassName)}\r\n        onChange={onChange}\r\n        expanded={expanded}\r\n        doExpand={doExpand}\r\n        doCollapse={doCollapse}\r\n        onExpandEvent={onExpandEvent}\r\n        aria-label=\"rdw-textalign-control\"\r\n        title={title}\r\n      >\r\n        <img\r\n          src={(textAlignment && config[textAlignment] && config[textAlignment].icon) || getFirstIcon(config)}\r\n          alt=\"\"\r\n        />\r\n        {options.indexOf('left') >= 0 && <DropdownOption\r\n          value=\"left\"\r\n          active={textAlignment === 'left'}\r\n          className={classNames('rdw-text-align-dropdownOption', left.className)}\r\n          title={left.title}\r\n        >\r\n          <img\r\n            src={left.icon}\r\n            alt=\"\"\r\n          />\r\n        </DropdownOption>}\r\n        {options.indexOf('center') >= 0 && <DropdownOption\r\n          value=\"center\"\r\n          active={textAlignment === 'center'}\r\n          className={classNames('rdw-text-align-dropdownOption', center.className)}\r\n          title={center.title}\r\n        >\r\n          <img\r\n            src={center.icon}\r\n            alt=\"\"\r\n          />\r\n        </DropdownOption>}\r\n        {options.indexOf('right') >= 0 && <DropdownOption\r\n          value=\"right\"\r\n          active={textAlignment === 'right'}\r\n          className={classNames('rdw-text-align-dropdownOption', right.className)}\r\n          title={right.title}\r\n        >\r\n          <img\r\n            src={right.icon}\r\n            alt=\"\"\r\n          />\r\n        </DropdownOption>}\r\n        {options.indexOf('justify') >= 0 && <DropdownOption\r\n          value=\"justify\"\r\n          active={textAlignment === 'justify'}\r\n          className={classNames('rdw-text-align-dropdownOption', justify.className)}\r\n          title={justify.title}\r\n        >\r\n          <img\r\n            src={justify.icon}\r\n            alt=\"\"\r\n          />\r\n        </DropdownOption>}\r\n      </Dropdown>\r\n    );\r\n  }\r\n\r\n  render(): Object {\r\n    const { config: { inDropdown } } = this.props;\r\n    if (inDropdown) {\r\n      return this.renderInDropDown();\r\n    }\r\n    return this.renderInFlatList();\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSelectedBlocksMetadata, setBlockData } from 'draftjs-utils';\r\n\r\nimport LayoutComponent from './Component';\r\n\r\nexport default class TextAlign extends Component {\r\n  static propTypes = {\r\n    editorState: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    modalHandler: PropTypes.object,\r\n    config: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    currentTextAlignment: undefined,\r\n  }\r\n\r\n  componentWillMount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.registerCallBack(this.expandCollapse);\r\n  }\r\n\r\n  componentWillReceiveProps(properties) {\r\n    if (properties.editorState !== this.props.editorState) {\r\n      this.setState({\r\n        currentTextAlignment: getSelectedBlocksMetadata(properties.editorState).get('text-align'),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.deregisterCallBack(this.expandCollapse);\r\n  }\r\n\r\n  onExpandEvent: Function = (): void => {\r\n    this.signalExpanded = !this.state.expanded;\r\n  };\r\n\r\n  expandCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: this.signalExpanded,\r\n    });\r\n    this.signalExpanded = false;\r\n  }\r\n\r\n  doExpand: Function = (): void => {\r\n    this.setState({\r\n      expanded: true,\r\n    });\r\n  };\r\n\r\n  doCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: false,\r\n    });\r\n  };\r\n\r\n  addBlockAlignmentData:Function = (value: string) => {\r\n    const { editorState, onChange } = this.props;\r\n    const { currentTextAlignment } = this.state;\r\n    if (currentTextAlignment !== value) {\r\n      onChange(setBlockData(editorState, { 'text-align': value }));\r\n    } else {\r\n      onChange(setBlockData(editorState, { 'text-align': undefined }));\r\n    }\r\n  }\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    const { expanded, currentTextAlignment } = this.state;\r\n    const TextAlignmentComponent = config.component || LayoutComponent;\r\n    return (\r\n      <TextAlignmentComponent\r\n        config={config}\r\n        expanded={expanded}\r\n        onExpandEvent={this.onExpandEvent}\r\n        doExpand={this.doExpand}\r\n        doCollapse={this.doCollapse}\r\n        currentState={{ textAlignment: currentTextAlignment }}\r\n        onChange={this.addBlockAlignmentData}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { getFirstIcon } from '../../../utils/toolbar';\r\nimport Option from '../../../components/Option';\r\nimport Dropdown from '../../../components/Dropdown';\r\nimport DropdownOption from '../../../components/DropdownOption';\r\nimport './styles.css';\r\n\r\nexport default class History extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onExpandEvent: PropTypes.func,\r\n    config: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    currentState: PropTypes.object,\r\n  };\r\n\r\n  onChange = (obj) => {\r\n    const { onChange } = this.props;\r\n    onChange(obj);\r\n  }\r\n\r\n  renderInDropDown(): Object {\r\n    const {\r\n      config,\r\n      expanded,\r\n      doExpand,\r\n      onExpandEvent,\r\n      doCollapse,\r\n      currentState: { undoDisabled, redoDisabled },\r\n    } = this.props;\r\n    const { options, undo, redo, className, dropdownClassName, title } = config;\r\n    return (\r\n      <Dropdown\r\n        className={classNames('rdw-history-dropdown', className)}\r\n        optionWrapperClassName={classNames(dropdownClassName)}\r\n        expanded={expanded}\r\n        doExpand={doExpand}\r\n        doCollapse={doCollapse}\r\n        onExpandEvent={onExpandEvent}\r\n        aria-label=\"rdw-history-control\"\r\n        title={title}\r\n      >\r\n        <img\r\n          src={getFirstIcon(config)}\r\n          alt=\"\"\r\n        />\r\n        {options.indexOf('undo') >= 0 && <DropdownOption\r\n          value=\"undo\"\r\n          onClick={this.onChange}\r\n          disabled={undoDisabled}\r\n          className={classNames('rdw-history-dropdownoption', undo.className)}\r\n          title={undo.title}\r\n        >\r\n          <img\r\n            src={undo.icon}\r\n            alt=\"\"\r\n          />\r\n        </DropdownOption>}\r\n        {options.indexOf('redo') >= 0 && <DropdownOption\r\n          value=\"redo\"\r\n          onClick={this.onChange}\r\n          disabled={redoDisabled}\r\n          className={classNames('rdw-history-dropdownoption', redo.className)}\r\n          title={redo.title}\r\n        >\r\n          <img\r\n            src={redo.icon}\r\n            alt=\"\"\r\n          />\r\n        </DropdownOption>}\r\n      </Dropdown>\r\n    );\r\n  }\r\n\r\n  renderInFlatList(): Object {\r\n    const {\r\n      config: { options, undo, redo, className },\r\n      currentState: { undoDisabled, redoDisabled },\r\n    } = this.props;\r\n    return (\r\n      <div className={classNames('rdw-history-wrapper', className)} aria-label=\"rdw-history-control\">\r\n        {options.indexOf('undo') >= 0 && <Option\r\n          value=\"undo\"\r\n          onClick={this.onChange}\r\n          className={classNames(undo.className)}\r\n          disabled={undoDisabled}\r\n          title={undo.title}\r\n        >\r\n          <img\r\n            src={undo.icon}\r\n            alt=\"\"\r\n          />\r\n        </Option>}\r\n        {options.indexOf('redo') >= 0 && <Option\r\n          value=\"redo\"\r\n          onClick={this.onChange}\r\n          className={classNames(redo.className)}\r\n          disabled={redoDisabled}\r\n          title={redo.title}\r\n        >\r\n          <img\r\n            src={redo.icon}\r\n            alt=\"\"\r\n          />\r\n        </Option>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    if (config.inDropdown) {\r\n      return this.renderInDropDown();\r\n    }\r\n    return this.renderInFlatList();\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { EditorState } from 'draft-js';\r\n\r\nimport LayoutComponent from './Component';\r\n\r\nexport default class History extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    editorState: PropTypes.object,\r\n    modalHandler: PropTypes.object,\r\n    config: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {\r\n    expanded: false,\r\n    undoDisabled: false,\r\n    redoDisabled: false,\r\n  };\r\n\r\n  componentWillMount(): void {\r\n    const { editorState, modalHandler } = this.props;\r\n    if (editorState) {\r\n      this.setState({\r\n        undoDisabled: editorState.getUndoStack().size === 0,\r\n        redoDisabled: editorState.getRedoStack().size === 0,\r\n      });\r\n    }\r\n    modalHandler.registerCallBack(this.expandCollapse);\r\n  }\r\n\r\n  componentWillReceiveProps(properties: Object): void {\r\n    if (properties.editorState &&\r\n      this.props.editorState !== properties.editorState) {\r\n      this.setState({\r\n        undoDisabled: properties.editorState.getUndoStack().size === 0,\r\n        redoDisabled: properties.editorState.getRedoStack().size === 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.deregisterCallBack(this.expandCollapse);\r\n  }\r\n\r\n  onExpandEvent: Function = (): void => {\r\n    this.signalExpanded = !this.state.expanded;\r\n  };\r\n\r\n  onChange: Function = (action) => {\r\n    const { editorState, onChange } = this.props;\r\n    const newState = EditorState[action](editorState);\r\n    if (newState) {\r\n      onChange(newState);\r\n    }\r\n  }\r\n\r\n  doExpand: Function = (): void => {\r\n    this.setState({\r\n      expanded: true,\r\n    });\r\n  };\r\n\r\n  doCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: false,\r\n    });\r\n  };\r\n\r\n  expandCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: this.signalExpanded,\r\n    });\r\n    this.signalExpanded = false;\r\n  }\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    const { undoDisabled, redoDisabled, expanded } = this.state;\r\n    const HistoryComponent = config.component || LayoutComponent;\r\n    return (\r\n      <HistoryComponent\r\n        config={config}\r\n        currentState={{ undoDisabled, redoDisabled }}\r\n        expanded={expanded}\r\n        onExpandEvent={this.onExpandEvent}\r\n        doExpand={this.doExpand}\r\n        doCollapse={this.doCollapse}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Option from '../../../components/Option';\r\n\r\nimport './styles.css';\r\n\r\nexport default class Insertion extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onExpandEvent: PropTypes.func,\r\n    config: PropTypes.object,\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  render(): Object {\r\n    const { config, onClick } = this.props;\r\n    return (\r\n      <div className={classNames('rdw-insertion-wrapper', config.className)} aria-label=\"rdw-inline-control\">\r\n        {\r\n          config.options\r\n            .map((style, index) =>\r\n              (<Option\r\n                key={index}\r\n                value={style}\r\n                onClick={() => onClick(config[style].value)}\r\n                className={classNames(config[style].className)}\r\n                active={false}\r\n                title={config[style].title}\r\n              >\r\n                {config[style].icon ?\r\n                  (<img\r\n                    alt=\"\"\r\n                    src={config[style].icon}\r\n                  />) : config[style].title\r\n                }\r\n              </Option>),\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// todo: make subscript less low\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { EditorState, Modifier } from 'draft-js';\r\n\r\nimport LayoutComponent from './Component';\r\n\r\nexport default class Insertion extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    editorState: PropTypes.object.isRequired,\r\n    modalHandler: PropTypes.object,\r\n    config: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {};\r\n\r\n  componentWillMount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.registerCallBack(this.expandCollapse);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.deregisterCallBack(this.expandCollapse);\r\n  }\r\n\r\n  onExpandEvent: Function = (): void => {\r\n    this.signalExpanded = !this.state.expanded;\r\n  };\r\n\r\n  expandCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: this.signalExpanded,\r\n    });\r\n    this.signalExpanded = false;\r\n  }\r\n\r\n  insertCharacter: Function = (character: string): void => {\r\n    const { editorState, onChange } = this.props;\r\n    const newState = EditorState.push(\r\n      editorState,\r\n      Modifier.replaceText(\r\n        editorState.getCurrentContent(),\r\n        editorState.getSelection(),\r\n        character,\r\n        editorState.getCurrentInlineStyle()\r\n      ),\r\n      'insert-characters',\r\n    );\r\n    if (newState) {\r\n      onChange(newState);\r\n    }\r\n  }\r\n\r\n  doExpand: Function = (): void => {\r\n    this.setState({\r\n      expanded: true,\r\n    });\r\n  };\r\n\r\n  doCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: false,\r\n    });\r\n  };\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    const { expanded } = this.state;\r\n    const InsertionComponent = config.component || LayoutComponent;\r\n    return (\r\n      <InsertionComponent\r\n        config={config}\r\n        expanded={expanded}\r\n        onExpandEvent={this.onExpandEvent}\r\n        doExpand={this.doExpand}\r\n        doCollapse={this.doCollapse}\r\n        onClick={this.insertCharacter}\r\n      />\r\n    );\r\n  }\r\n}\r\n// make subscript less low\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Option from '../../../components/Option';\r\n\r\nimport './styles.css';\r\n\r\nexport default class Submission extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    doExpand: PropTypes.func,\r\n    doCollapse: PropTypes.func,\r\n    onExpandEvent: PropTypes.func,\r\n    config: PropTypes.object,\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  render(): Object {\r\n    const { config, onClick } = this.props;\r\n    return (\r\n      <div className={classNames('rdw-submission-wrapper', config.className)} aria-label=\"rdw-inline-control\">\r\n        {\t\t\r\n          config.options\r\n            .map((style, index) =>\r\n              (<Option\r\n                key={index}\r\n                value={style}\r\n                onClick={() => onClick(config[style].value)}\r\n                className={classNames(config[style].className)}\r\n                active={false}\r\n                title={config[style].title}\r\n\t\t\t\ttype={config[style].type}\r\n              >\r\n                {config[style].icon ?\r\n                  (<img\r\n                    alt=\"\"\r\n                    src={config[style].icon}\r\n                  />) : config[style].value\r\n                }\r\n              </Option>),\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// todo: make subscript less low\r\n","import inline from './Inline';\r\nimport blockType from './BlockType';\r\nimport fontSize from './FontSize';\r\nimport textAlign from './TextAlign';\r\nimport history from './History';\r\nimport insertion from './Insertion';\r\nimport submission from './Submission'\r\n\r\nconst Controls = {\r\n  inline,\r\n  blockType,\r\n  fontSize,\r\n  textAlign,\r\n  history,\r\n  insertion,\r\n  submission,\r\n};\r\n\r\nexport default Controls;\r\n","/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { convertToRaw } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nimport LayoutComponent from './Component';\r\n\r\nexport default class Submission extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    editorState: PropTypes.object.isRequired,\r\n    onExport: PropTypes.func,\r\n\tonReset: PropTypes.func,\r\n    modalHandler: PropTypes.object,\r\n    config: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {};\r\n\r\n  componentWillMount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.registerCallBack(this.expandCollapse);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    const { modalHandler } = this.props;\r\n    modalHandler.deregisterCallBack(this.expandCollapse);\r\n  }\r\n\r\n  onExpandEvent: Function = (): void => {\r\n    this.signalExpanded = !this.state.expanded;\r\n  };\r\n\r\n  expandCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: this.signalExpanded,\r\n    });\r\n    this.signalExpanded = false;\r\n  }\r\n\r\n  onClick: Function = (btn): void => {\r\n\tconst { editorState, onExport, onReset } = this.props;\r\n\tif (btn === \"Submit\") {\r\n\t\tconst rawContentState = convertToRaw(editorState.getCurrentContent());\r\n\r\n\t\tconst markup = draftToHtml(\r\n\t\t  rawContentState,\r\n\t\t);\r\n\t\tif (onExport) {\r\n\t\t  onExport(markup);\r\n\t\t}\r\n\t} else if (btn === \"Reset\") {\r\n\t\tonReset();\t\t\r\n\t}\r\n  }\r\n\r\n  doExpand: Function = (): void => {\r\n    this.setState({\r\n      expanded: true,\r\n    });\r\n  };\r\n\r\n  doCollapse: Function = (): void => {\r\n    this.setState({\r\n      expanded: false,\r\n    });\r\n  };\r\n\r\n  render(): Object {\r\n    const { config } = this.props;\r\n    const { expanded } = this.state;\r\n    const SubmissionComponent = config.component || LayoutComponent;\r\n    return (\r\n      <SubmissionComponent\r\n        config={config}\r\n        expanded={expanded}\r\n        onExpandEvent={this.onExpandEvent}\r\n        doExpand={this.doExpand}\r\n        doCollapse={this.doCollapse}\r\n        onClick={this.onClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n// make subscript less low\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Embed = ({ block, contentState }) => {\r\n  const entity = contentState.getEntity(block.getEntityAt(0));\r\n  const { src, height, width } = entity.getData();\r\n  return (<iframe height={height} width={width} src={src} frameBorder=\"0\" allowFullScreen title=\"Wysiwyg Embedded Content\" />);\r\n};\r\n\r\nEmbed.propTypes = {\r\n  block: PropTypes.object,\r\n  contentState: PropTypes.object,\r\n};\r\n\r\nexport default Embed;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { EditorState } from 'draft-js';\r\nimport classNames from 'classnames';\r\nimport Option from '../../components/Option';\r\nimport './styles.css';\r\n\r\nconst getImageComponent = config => class Image extends Component {\r\n  static propTypes: Object = {\r\n    block: PropTypes.object,\r\n    contentState: PropTypes.object,\r\n  };\r\n\r\n  state: Object = {\r\n    hovered: false,\r\n  };\r\n\r\n  setEntityAlignmentLeft: Function = (): void => {\r\n    this.setEntityAlignment('left');\r\n  };\r\n\r\n  setEntityAlignmentRight: Function = (): void => {\r\n    this.setEntityAlignment('right');\r\n  };\r\n\r\n  setEntityAlignmentCenter: Function = (): void => {\r\n    this.setEntityAlignment('none');\r\n  };\r\n\r\n  setEntityAlignment: Function = (alignment): void => {\r\n    const { block, contentState } = this.props;\r\n    const entityKey = block.getEntityAt(0);\r\n    contentState.mergeEntityData(\r\n      entityKey,\r\n      { alignment },\r\n    );\r\n    config.onChange(EditorState.push(config.getEditorState(), contentState, 'change-block-data'));\r\n    this.setState({\r\n      dummy: true,\r\n    });\r\n  };\r\n\r\n  toggleHovered: Function = (): void => {\r\n    const hovered = !this.state.hovered;\r\n    this.setState({\r\n      hovered,\r\n    });\r\n  };\r\n\r\n  renderAlignmentOptions(alignment): Object {\r\n    return (\r\n      <div\r\n        className={classNames(\r\n          'rdw-image-alignment-options-popup',\r\n          {\r\n            'rdw-image-alignment-options-popup-right': alignment === 'right',\r\n          },\r\n        )}\r\n      >\r\n        <Option\r\n          onClick={this.setEntityAlignmentLeft}\r\n          className=\"rdw-image-alignment-option\"\r\n        >\r\n          L\r\n        </Option>\r\n        <Option\r\n          onClick={this.setEntityAlignmentCenter}\r\n          className=\"rdw-image-alignment-option\"\r\n        >\r\n          C\r\n        </Option>\r\n        <Option\r\n          onClick={this.setEntityAlignmentRight}\r\n          className=\"rdw-image-alignment-option\"\r\n        >\r\n          R\r\n        </Option>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(): Object {\r\n    const { block, contentState } = this.props;\r\n    const { hovered } = this.state;\r\n    const { isReadOnly, isImageAlignmentEnabled } = config;\r\n    const entity = contentState.getEntity(block.getEntityAt(0));\r\n    const { src, alignment, height, width, alt } = entity.getData();\r\n\r\n    return (\r\n      <span\r\n        onMouseEnter={this.toggleHovered}\r\n        onMouseLeave={this.toggleHovered}\r\n        className={classNames(\r\n          'rdw-image-alignment',\r\n          {\r\n            'rdw-image-left': alignment === 'left',\r\n            'rdw-image-right': alignment === 'right',\r\n            'rdw-image-center': !alignment || alignment === 'none',\r\n          },\r\n        )}\r\n      >\r\n        <span className=\"rdw-image-imagewrapper\">\r\n          <img\r\n            src={src}\r\n            alt={alt}\r\n            style={{\r\n              height,\r\n              width,\r\n            }}\r\n          />\r\n          {\r\n            !isReadOnly() && hovered && isImageAlignmentEnabled() ?\r\n              this.renderAlignmentOptions(alignment)\r\n              :\r\n              undefined\r\n          }\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default getImageComponent;\r\n","import Embedded from './Embedded';\r\nimport getImageComponent from '../renderer/Image';\r\n\r\nconst getBlockRenderFunc = (config, customBlockRenderer) => (block) => {\r\n  if (typeof customBlockRenderer === 'function') {\r\n    const renderedComponent = customBlockRenderer(block, config, config.getEditorState);\r\n    if (renderedComponent) return renderedComponent;\r\n  }\r\n  if (block.getType() === 'atomic') {\r\n    const contentState = config.getEditorState().getCurrentContent();\r\n    const entity = contentState.getEntity(block.getEntityAt(0));\r\n    if (entity && entity.type === 'IMAGE') {\r\n      return {\r\n        component: getImageComponent(config),\r\n        editable: false,\r\n      };\r\n    } else if (entity && entity.type === 'EMBEDDED_LINK') {\r\n      return {\r\n        component: Embedded,\r\n        editable: false,\r\n      };\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport default getBlockRenderFunc;\r\n","import bold from '../icons/bold.svg';\r\nimport italic from '../icons/italic.svg';\r\nimport underline from '../icons/underline.svg';\r\nimport monospace from '../icons/monospace.svg';\r\nimport fontSize from '../icons/font-size.svg';\r\nimport left from '../icons/align-left.svg';\r\nimport center from '../icons/align-center.svg';\r\nimport right from '../icons/align-right.svg';\r\nimport undo from '../icons/undo.svg';\r\nimport redo from '../icons/redo.svg';\r\n\r\n/**\r\n* This is default toolbar configuration,\r\n* whatever user passes in toolbar property is deeply merged with this to over-ride defaults.\r\n*/\r\nexport default {\r\n  options: ['inline', 'blockType', 'fontSize', 'textAlign', 'history', 'insertion', 'submission'],\r\n  inline: {\r\n    inDropdown: false,\r\n    className: undefined,\r\n    component: undefined,\r\n    dropdownClassName: undefined,\r\n    options: ['bold', 'italic', 'underline'],\r\n    bold: { icon: bold, className: undefined, title: undefined },\r\n    italic: { icon: italic, className: undefined, title: undefined },\r\n    underline: { icon: underline, className: undefined, title: undefined },\r\n    monospace: { icon: monospace, className: undefined, title: undefined },\r\n  },\r\n  blockType: {\r\n    inDropdown: true,\r\n    options: ['Normal', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'Blockquote', 'Code'],\r\n    className: undefined,\r\n    component: undefined,\r\n    dropdownClassName: undefined,\r\n    title: undefined,\r\n  },\r\n  fontSize: {\r\n    icon: fontSize,\r\n    options: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36, 48, 60, 72, 96],\r\n    className: undefined,\r\n    component: undefined,\r\n    dropdownClassName: undefined,\r\n    title: undefined,\r\n  },\r\n  textAlign: {\r\n    inDropdown: false,\r\n    className: undefined,\r\n    component: undefined,\r\n    dropdownClassName: undefined,\r\n    options: ['left', 'center', 'right'],\r\n    left: { icon: left, className: undefined, title: undefined },\r\n    center: { icon: center, className: undefined, title: undefined },\r\n    right: { icon: right, className: undefined, title: undefined },\r\n    title: undefined,\r\n  },\r\n  history: {\r\n    inDropdown: false,\r\n    className: undefined,\r\n    component: undefined,\r\n    dropdownClassName: undefined,\r\n    options: ['undo', 'redo'],\r\n    undo: { icon: undo, className: undefined, title: undefined },\r\n    redo: { icon: redo, className: undefined, title: undefined },\r\n    title: undefined,\r\n  },\r\n  insertion: {\r\n    inDropdown: false,\r\n    className: undefined,\r\n    component: undefined,\r\n    dropdownClassName: undefined,\r\n    options: ['emdash', 'endash', 'lapostrophe', 'rapostrophe', 'lquotation', 'rquotation'],\r\n    emdash: {className: 'insertionChar underline', title: 'EM', value: '\\u2014'},\r\n    endash: {className: 'insertionChar underline', title: 'EN', value: '\\u2013'},\r\n    lapostrophe: {className: 'insertionChar', title: '\\u2018', value: '\\u2018'},\r\n    rapostrophe: {className: 'insertionChar', title: '\\u2019', value: '\\u2019'},\r\n    lquotation: {className: 'insertionChar', title: '\\u201C', value: '\\u201C'},\r\n    rquotation: {className: 'insertionChar', title: '\\u201D', value: '\\u201D'},\r\n    title: undefined\r\n  },\r\n  submission: {\r\n    inDropdown: false,\r\n    className: undefined,\r\n    component: undefined,\r\n    dropdownClassName: undefined,\r\n    options: ['export', 'reset'],\r\n    export: {className: 'exportBtn', title: undefined, value: \"Submit\", type: \"submit\"},\r\n\treset: {className: 'resetBtn', title: undefined, value: \"Reset\", type: undefined},\r\n    title: undefined\r\n  }\r\n};\r\n","/* @flow */\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Editor,\r\n  EditorState,\r\n  ContentState,\r\n  RichUtils,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n  CompositeDecorator\r\n} from \"draft-js\";\r\nimport {\r\n  changeDepth,\r\n  handleNewLine,\r\n  blockRenderMap,\r\n  getCustomStyleMap,\r\n  extractInlineStyle,\r\n  getSelectedBlocksType\r\n} from \"draftjs-utils\";\r\nimport classNames from \"classnames\";\r\nimport ModalHandler from \"../event-handler/modals\";\r\nimport FocusHandler from \"../event-handler/focus\";\r\nimport KeyDownHandler from \"../event-handler/keyDown\";\r\nimport SuggestionHandler from \"../event-handler/suggestions\";\r\nimport blockStyleFn from \"../utils/BlockStyle\";\r\nimport { mergeRecursive } from \"../utils/toolbar\";\r\nimport { hasProperty, filter } from \"../utils/common\";\r\nimport { handlePastedText } from \"../utils/handlePaste\";\r\nimport Controls from \"../controls\";\r\nimport getBlockRenderFunc from \"../renderer\";\r\nimport defaultToolbar from \"../config/defaultToolbar\";\r\nimport \"./styles.css\";\r\nimport \"./Draft.css\";\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport DraftPasteProcessor from 'draft-js/lib/DraftPasteProcessor';\r\n\r\nexport default class WysiwygEditor extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    onEditorStateChange: PropTypes.func,\r\n    onContentStateChange: PropTypes.func,\r\n    // initialContentState is deprecated\r\n    initialContentState: PropTypes.object,\r\n    defaultContentState: PropTypes.object,\r\n    contentState: PropTypes.object,\r\n    editorState: PropTypes.object,\r\n    defaultEditorState: PropTypes.object,\r\n    toolbarOnFocus: PropTypes.bool,\r\n    spellCheck: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\r\n    stripPastedStyles: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\r\n    toolbar: PropTypes.object,\r\n    toolbarCustomButtons: PropTypes.array,\r\n    toolbarClassName: PropTypes.string,\r\n    toolbarHidden: PropTypes.bool,\r\n    editorClassName: PropTypes.string,\r\n    wrapperClassName: PropTypes.string,\r\n    toolbarStyle: PropTypes.object,\r\n    editorStyle: PropTypes.object,\r\n    wrapperStyle: PropTypes.object,\r\n    uploadCallback: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n    onTab: PropTypes.func,\r\n    mention: PropTypes.object,\r\n    hashtag: PropTypes.object,\r\n    textAlignment: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    readOnly: PropTypes.bool,\r\n    tabIndex: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\r\n    placeholder: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    ariaLabel: PropTypes.string,\r\n    ariaOwneeID: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    ariaActiveDescendantID: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    ariaAutoComplete: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    ariaDescribedBy: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    ariaExpanded: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    ariaHasPopup: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\r\n    customBlockRenderFunc: PropTypes.func,\r\n    wrapperId: PropTypes.number,\r\n    customDecorators: PropTypes.array,\r\n    editorRef: PropTypes.func,\r\n    onExport: PropTypes.func,\r\n\tinitialText: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    toolbarOnFocus: false,\r\n    toolbarHidden: false,\r\n    stripPastedStyles: false,\r\n    customDecorators: [],\r\n\tinitialText: \"\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const toolbar = mergeRecursive(defaultToolbar, props.toolbar);\r\n    this.state = {\r\n      editorState: undefined,\r\n      editorFocused: false,\r\n      toolbar\r\n    };\r\n    const wrapperId = props.wrapperId\r\n      ? props.wrapperId\r\n      : Math.floor(Math.random() * 10000);\r\n    this.wrapperId = `rdw-wrapper-${wrapperId}`;\r\n    this.modalHandler = new ModalHandler();\r\n    this.focusHandler = new FocusHandler();\r\n    this.blockRendererFn = getBlockRenderFunc(\r\n      {\r\n        isReadOnly: this.isReadOnly,\r\n        isImageAlignmentEnabled: this.isImageAlignmentEnabled,\r\n        getEditorState: this.getEditorState,\r\n        onChange: this.onChange\r\n      },\r\n      props.customBlockRenderFunc\r\n    );\r\n    this.editorProps = this.filterEditorProps(props);\r\n    this.customStyleMap = getCustomStyleMap();\r\n  }\r\n\r\n  componentWillMount(): void {\r\n    this.compositeDecorator = this.getCompositeDecorator();\r\n\tlet editorState;\r\n\tif (this.props.initialText) {\r\n\t\tconst processedHTML = DraftPasteProcessor.processHTML(this.props.initialText);\r\n\t\tconst contentState = ContentState.createFromBlockArray(processedHTML);\r\n\t\teditorState = EditorState.createWithContent(contentState);\r\n        editorState = EditorState.moveFocusToEnd(editorState);\r\n    } else {\r\n\t\teditorState = this.createEditorState(this.compositeDecorator);\r\n\t}\r\n    extractInlineStyle(editorState);\r\n    this.setState({\r\n      editorState\r\n    });\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this.modalHandler.init(this.wrapperId);\r\n\tthis.editor.focus();\r\n\tconst markup = draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\r\n\tdocument.getElementById(\"hiddentextareaanswer\").value = markup;\r\n  }\r\n  // todo: change decorators depending on properties recceived in componentWillReceiveProps.\r\n\r\n  componentWillReceiveProps(props) {\r\n    const newState = {};\r\n    if (this.props.toolbar !== props.toolbar) {\r\n      const toolbar = mergeRecursive(defaultToolbar, props.toolbar);\r\n      newState.toolbar = toolbar;\r\n    }\r\n    if (\r\n      hasProperty(props, \"editorState\") &&\r\n      this.props.editorState !== props.editorState\r\n    ) {\r\n      if (props.editorState) {\r\n        newState.editorState = EditorState.set(props.editorState, {\r\n          decorator: this.compositeDecorator\r\n        });\r\n      } else {\r\n        newState.editorState = EditorState.createEmpty(this.compositeDecorator);\r\n      }\r\n    } else if (\r\n      hasProperty(props, \"contentState\") &&\r\n      this.props.contentState !== props.contentState\r\n    ) {\r\n      if (props.contentState) {\r\n        const newEditorState = this.changeEditorState(props.contentState);\r\n        if (newEditorState) {\r\n          newState.editorState = newEditorState;\r\n        }\r\n      } else {\r\n        newState.editorState = EditorState.createEmpty(this.compositeDecorator);\r\n      }\r\n    }\r\n    if (\r\n      props.editorState !== this.props.editorState ||\r\n      props.contentState !== this.props.contentState\r\n    ) {\r\n      extractInlineStyle(newState.editorState);\r\n    }\r\n    this.setState(newState);\r\n    this.editorProps = this.filterEditorProps(props);\r\n    this.customStyleMap = getCustomStyleMap();\r\n  }\r\n\r\n  onEditorBlur: Function = (): void => {\r\n    this.setState({\r\n      editorFocused: false\r\n    });\r\n  };\r\n\r\n  onEditorFocus: Function = (event): void => {\r\n    const { onFocus } = this.props;\r\n    this.setState({\r\n      editorFocused: true\r\n    });\r\n    const editFocused = this.focusHandler.isEditorFocused();\r\n    if (onFocus && editFocused) {\r\n      onFocus(event);\r\n    }\r\n  };\r\n\r\n  onEditorMouseDown: Function = (): void => {\r\n    this.focusHandler.onEditorMouseDown();\r\n  };\r\n\r\n  onTab: Function = (event): boolean => {\r\n    const { onTab } = this.props;\r\n    if (!onTab || !onTab(event)) {\r\n      const editorState = changeDepth(\r\n        this.state.editorState,\r\n        event.shiftKey ? -1 : 1,\r\n        4\r\n      );\r\n      if (editorState && editorState !== this.state.editorState) {\r\n        this.onChange(editorState);\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  onUpDownArrow: Function = (event): boolean => {\r\n    if (SuggestionHandler.isOpen()) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  onToolbarFocus: Function = (event): void => {\r\n    const { onFocus } = this.props;\r\n    if (onFocus && this.focusHandler.isToolbarFocused()) {\r\n      onFocus(event);\r\n    }\r\n  };\r\n\r\n  onWrapperBlur: Function = (event: Object) => {\r\n    const { onBlur } = this.props;\r\n    if (onBlur && this.focusHandler.isEditorBlur(event)) {\r\n      onBlur(event, this.getEditorState());\r\n    }\r\n  };\r\n\r\n  onChange: Function = (editorState: Object): void => {\r\n    const { readOnly, onEditorStateChange } = this.props;\r\n\t\r\n    if (\r\n      !readOnly &&\r\n      !(\r\n        getSelectedBlocksType(editorState) === \"atomic\" &&\r\n        editorState.getSelection().isCollapsed\r\n      )\r\n    ) {\r\n      if (onEditorStateChange) {\r\n        onEditorStateChange(editorState, this.props.wrapperId);\r\n      }\r\n      if (!hasProperty(this.props, \"editorState\")) {\r\n        this.setState({ editorState }, this.afterChange(editorState));\r\n      } else {\r\n        this.afterChange(editorState);\r\n      }\r\n    }\r\n\t\r\n    const markup = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n\tdocument.getElementById(\"hiddentextareaanswer\").value = markup;\r\n  };\r\n\r\n  setWrapperReference: Function = (ref: Object): void => {\r\n    this.wrapper = ref;\r\n  };\r\n\r\n  setEditorReference: Function = (ref: Object): void => {\r\n    if (this.props.editorRef) {\r\n      this.props.editorRef(ref);\r\n    }\r\n    this.editor = ref;\r\n  };\r\n\r\n  getCompositeDecorator = (): void => {\r\n    const decorators = [...this.props.customDecorators];\r\n    return new CompositeDecorator(decorators);\r\n  };\r\n\r\n  getWrapperRef = () => this.wrapper;\r\n\r\n  getEditorState = () => this.state.editorState;\r\n\r\n  getSuggestions = () => this.props.mention && this.props.mention.suggestions;\r\n\r\n  afterChange: Function = (editorState): void => {\r\n    setTimeout(() => {\r\n      const { onChange, onContentStateChange } = this.props;\r\n      if (onChange) {\r\n        onChange(convertToRaw(editorState.getCurrentContent()));\r\n      }\r\n      if (onContentStateChange) {\r\n        onContentStateChange(convertToRaw(editorState.getCurrentContent()));\r\n      }\r\n    });\r\n  };\r\n\r\n  isReadOnly = () => this.props.readOnly;\r\n\r\n  isImageAlignmentEnabled = () => this.state.toolbar.image.alignmentEnabled;\r\n\r\n  createEditorState = compositeDecorator => {\r\n    let editorState;\r\n    if (hasProperty(this.props, \"editorState\")) {\r\n      if (this.props.editorState) {\r\n        editorState = EditorState.set(this.props.editorState, {\r\n          decorator: compositeDecorator\r\n        });\r\n      }\r\n    } else if (hasProperty(this.props, \"defaultEditorState\")) {\r\n      if (this.props.defaultEditorState) {\r\n        editorState = EditorState.set(this.props.defaultEditorState, {\r\n          decorator: compositeDecorator\r\n        });\r\n      }\r\n    } else if (hasProperty(this.props, \"contentState\")) {\r\n      if (this.props.contentState) {\r\n        const contentState = convertFromRaw(this.props.contentState);\r\n        editorState = EditorState.createWithContent(\r\n          contentState,\r\n          compositeDecorator\r\n        );\r\n        editorState = EditorState.moveSelectionToEnd(editorState);\r\n      }\r\n    } else if (\r\n      hasProperty(this.props, \"defaultContentState\") ||\r\n      hasProperty(this.props, \"initialContentState\")\r\n    ) {\r\n      let contentState =\r\n        this.props.defaultContentState || this.props.initialContentState;\r\n      if (contentState) {\r\n        contentState = convertFromRaw(contentState);\r\n        editorState = EditorState.createWithContent(\r\n          contentState,\r\n          compositeDecorator\r\n        );\r\n        editorState = EditorState.moveSelectionToEnd(editorState);\r\n      }\r\n    }\r\n    if (!editorState) {\r\n      editorState = EditorState.createEmpty(compositeDecorator);\r\n    }\r\n    return editorState;\r\n  };\r\n\r\n  filterEditorProps = props =>\r\n    filter(props, [\r\n      \"onChange\",\r\n      \"onEditorStateChange\",\r\n      \"onContentStateChange\",\r\n      \"initialContentState\",\r\n      \"defaultContentState\",\r\n      \"contentState\",\r\n      \"editorState\",\r\n      \"defaultEditorState\",\r\n      \"toolbarOnFocus\",\r\n      \"toolbar\",\r\n      \"toolbarCustomButtons\",\r\n      \"toolbarClassName\",\r\n      \"editorClassName\",\r\n      \"toolbarHidden\",\r\n      \"wrapperClassName\",\r\n      \"toolbarStyle\",\r\n      \"editorStyle\",\r\n      \"wrapperStyle\",\r\n      \"uploadCallback\",\r\n      \"onFocus\",\r\n      \"onBlur\",\r\n      \"onTab\",\r\n      \"mention\",\r\n      \"hashtag\",\r\n      \"ariaLabel\",\r\n      \"customBlockRenderFunc\",\r\n      \"customDecorators\",\r\n      \"handlePastedText\"\r\n    ]);\r\n\r\n  changeEditorState = contentState => {\r\n    const newContentState = convertFromRaw(contentState);\r\n    let { editorState } = this.state;\r\n    editorState = EditorState.push(\r\n      editorState,\r\n      newContentState,\r\n      \"insert-characters\"\r\n    );\r\n    editorState = EditorState.moveSelectionToEnd(editorState);\r\n    return editorState;\r\n  };\r\n\r\n  focusEditor: Function = (): void => {\r\n    setTimeout(() => {\r\n      this.editor.focus();\r\n    });\r\n  };\r\n\r\n  handleKeyCommand: Function = (command: Object): boolean => {\r\n    const { editorState, toolbar: { inline } } = this.state;\r\n    if (inline && inline.options.indexOf(command) >= 0) {\r\n      const newState = RichUtils.handleKeyCommand(editorState, command);\r\n      if (newState) {\r\n        this.onChange(newState);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handleReturn: Function = (event: Object): boolean => {\r\n    if (SuggestionHandler.isOpen()) {\r\n      return true;\r\n    }\r\n    const editorState = handleNewLine(this.state.editorState, event);\r\n    if (editorState) {\r\n      this.onChange(editorState);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handlePastedText = (text, html) => {\r\n    const { editorState } = this.state;\r\n\r\n    if (this.props.handlePastedText) {\r\n      return this.props.handlePastedText(\r\n        text,\r\n        html,\r\n        editorState,\r\n        this.onChange\r\n      );\r\n    }\r\n    if (!this.props.stripPastedStyles) {\r\n      return handlePastedText(text, html, editorState, this.onChange);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  preventDefault: Function = (event: Object) => {\r\n    if (event.target.tagName === \"INPUT\" || event.target.tagName === \"LABEL\") {\r\n      this.focusHandler.onInputMouseDown();\r\n    } else {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n  \r\n  onReset = () => {        \r\n\tlet newContentState;\r\n    if (this.props.initialText) {\r\n        const processedHTML = DraftPasteProcessor.processHTML(this.props.initialText);\r\n        newContentState = ContentState.createFromBlockArray(processedHTML);\r\n    }\r\n    else {\r\n\t\tnewContentState = ContentState.createFromText('');\r\n    }\r\n\t\r\n\tlet newEditorState = EditorState.push(this.state.editorState, newContentState);\r\n\tnewEditorState = EditorState.moveFocusToEnd(newEditorState);\r\n\tthis.setState({editorState: newEditorState});\r\n\r\n  }\r\n\r\n  render() {\r\n    const { editorState, editorFocused, toolbar } = this.state;\r\n    const {\r\n      toolbarCustomButtons,\r\n      toolbarOnFocus,\r\n      toolbarClassName,\r\n      toolbarHidden,\r\n      editorClassName,\r\n      wrapperClassName,\r\n      toolbarStyle,\r\n      editorStyle,\r\n      wrapperStyle,\r\n      uploadCallback,\r\n      ariaLabel\r\n    } = this.props;\r\n\r\n    const controlProps = {\r\n      modalHandler: this.modalHandler,\r\n      editorState,\r\n      onChange: this.onChange,\r\n      onExport: this.props.onExport,\r\n\t  onReset: this.onReset,\r\n    };\r\n    const toolbarShow =\r\n      editorFocused || this.focusHandler.isInputFocused() || !toolbarOnFocus;\r\n    return (\r\n\t\t<>\r\n\t\t  <div\r\n\t\t\tid={this.wrapperId}\r\n\t\t\tclassName={classNames(wrapperClassName, \"rdw-editor-wrapper\")}\r\n\t\t\tstyle={wrapperStyle}\r\n\t\t\tonClick={this.modalHandler.onEditorClick}\r\n\t\t\tonBlur={this.onWrapperBlur}\r\n\t\t\taria-label=\"rdw-wrapper\"\r\n\t\t  >\r\n\t\t\t{!toolbarHidden && (\r\n\t\t\t\t<div\r\n\t\t\t\t  className={classNames(\"rdw-editor-toolbar\", toolbarClassName)}\r\n\t\t\t\t  style={{\r\n\t\t\t\t\tvisibility: toolbarShow ? \"visible\" : \"hidden\",\r\n\t\t\t\t\t...toolbarStyle\r\n\t\t\t\t  }}\r\n\t\t\t\t  onMouseDown={this.preventDefault}\r\n\t\t\t\t  aria-label=\"rdw-toolbar\"\r\n\t\t\t\t  aria-hidden={(!editorFocused && toolbarOnFocus).toString()}\r\n\t\t\t\t  onFocus={this.onToolbarFocus}\r\n\t\t\t\t>\r\n\t\t\t\t  {toolbar.options.map((opt, index) => {\r\n\t\t\t\t\tconst Control = Controls[opt];\r\n\t\t\t\t\tconst config = toolbar[opt];\r\n\t\t\t\t\tif (opt === \"image\" && uploadCallback) {\r\n\t\t\t\t\t  config.uploadCallback = uploadCallback;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst ControlBlock = <Control key={index} {...controlProps} config={config} />;\r\n\t\t\t\t\tif (opt === 'insertion') {\r\n\t\t\t\t\t  return (\r\n\t\t\t\t\t\t<div key={index + \"div\"} className={\"rdw-insertion-container\"}>\r\n\t\t\t\t\t\t  {ControlBlock}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t  );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ControlBlock;\r\n\t\t\t\t  })}\r\n\t\t\t\t  {toolbarCustomButtons &&\r\n\t\t\t\t\ttoolbarCustomButtons.map((button, index) =>\r\n\t\t\t\t\t  React.cloneElement(button, { key: index, ...controlProps })\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)}\r\n\t\t\t<div\r\n\t\t\t  ref={this.setWrapperReference}\r\n\t\t\t  className={classNames(editorClassName, \"rdw-editor-main\")}\r\n\t\t\t  style={editorStyle}\r\n\t\t\t  onClick={this.focusEditor}\r\n\t\t\t  onFocus={this.onEditorFocus}\r\n\t\t\t  onBlur={this.onEditorBlur}\r\n\t\t\t  onKeyDown={KeyDownHandler.onKeyDown}\r\n\t\t\t  onMouseDown={this.onEditorMouseDown}\r\n\t\t\t>\r\n\t\t\t  <Editor\r\n\t\t\t\tref={this.setEditorReference}\r\n\t\t\t\tonTab={this.onTab}\r\n\t\t\t\tonUpArrow={this.onUpDownArrow}\r\n\t\t\t\tonDownArrow={this.onUpDownArrow}\r\n\t\t\t\teditorState={editorState}\r\n\t\t\t\tonChange={this.onChange}\r\n\t\t\t\tblockStyleFn={blockStyleFn}\r\n\t\t\t\tcustomStyleMap={getCustomStyleMap()}\r\n\t\t\t\thandleReturn={this.handleReturn}\r\n\t\t\t\thandlePastedText={this.handlePastedText}\r\n\t\t\t\tblockRendererFn={this.blockRendererFn}\r\n\t\t\t\thandleKeyCommand={this.handleKeyCommand}\r\n\t\t\t\tariaLabel={ariaLabel || \"rdw-editor\"}\r\n\t\t\t\tblockRenderMap={blockRenderMap}\r\n\t\t\t\t{...this.editorProps}\r\n\t\t\t  />\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t  </>\r\n    );\r\n  }\r\n}\r\n// todo: evaluate draftjs-utils to move some methods here\r\n// todo: move color near font-family\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Editor from './Editor';\n\nconst roots = Array.prototype.slice.call(document.getElementsByClassName('react-editor-root'));\nroots.forEach((elem) => {\n\tReactDOM.render(\n\t\t<Editor\n\t\t\tinitialText={document.getElementById(\"hiddentextareaanswer\").value}\n\t\t/>,\n\t\telem\n\t);\n});\n","module.exports = __webpack_public_path__ + \"static/media/bold.c9ae0d83.svg\";","module.exports = __webpack_public_path__ + \"static/media/italic.d9817891.svg\";","module.exports = __webpack_public_path__ + \"static/media/underline.19792c21.svg\";","module.exports = __webpack_public_path__ + \"static/media/monospace.bf73713b.svg\";","module.exports = __webpack_public_path__ + \"static/media/font-size.69979f94.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-left.208e638c.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-center.846314c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-right.a7033970.svg\";","module.exports = __webpack_public_path__ + \"static/media/undo.b61f48aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/redo.069995c7.svg\";"],"sourceRoot":""}